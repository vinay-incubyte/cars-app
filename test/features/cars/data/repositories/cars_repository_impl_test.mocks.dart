// Mocks generated by Mockito 5.4.6 from annotations
// in cars_app/test/features/cars/data/repositories/cars_repository_impl_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:cars_app/core/platforms/network_info.dart' as _i6;
import 'package:cars_app/features/cars/data/data_sources/cars_local_data_source.dart'
    as _i5;
import 'package:cars_app/features/cars/data/data_sources/cars_remote_data_source.dart'
    as _i2;
import 'package:cars_app/features/cars/data/models/car_model.dart' as _i4;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [CarsRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockCarsRemoteDataSource extends _i1.Mock
    implements _i2.CarsRemoteDataSource {
  MockCarsRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<List<_i4.CarModel>> fetchCars() =>
      (super.noSuchMethod(
            Invocation.method(#fetchCars, []),
            returnValue: _i3.Future<List<_i4.CarModel>>.value(<_i4.CarModel>[]),
          )
          as _i3.Future<List<_i4.CarModel>>);
}

/// A class which mocks [CarsLocalDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockCarsLocalDataSource extends _i1.Mock
    implements _i5.CarsLocalDataSource {
  MockCarsLocalDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<List<_i4.CarModel>> getCache() =>
      (super.noSuchMethod(
            Invocation.method(#getCache, []),
            returnValue: _i3.Future<List<_i4.CarModel>>.value(<_i4.CarModel>[]),
          )
          as _i3.Future<List<_i4.CarModel>>);

  @override
  _i3.Future<void> setCache(List<_i4.CarModel>? cars) =>
      (super.noSuchMethod(
            Invocation.method(#setCache, [cars]),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);
}

/// A class which mocks [NetworkInfo].
///
/// See the documentation for Mockito's code generation for more information.
class MockNetworkInfo extends _i1.Mock implements _i6.NetworkInfo {
  MockNetworkInfo() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<bool> isConnected() =>
      (super.noSuchMethod(
            Invocation.method(#isConnected, []),
            returnValue: _i3.Future<bool>.value(false),
          )
          as _i3.Future<bool>);
}
